name: Deploy-angular-docker-workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: 'false'

jobs:
  docker-version:
    name: Publish Docker Image Version
    runs-on: ubuntu-latest
    environment: CryptoTracker
    steps:
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Check Out Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # dockerHub username
          password: ${{ secrets.DOCKER_PASSWORD }} # dockerHub token
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6
      - name: Print version
        run: echo ${{ steps.extract_version.outputs.version }}
      - name: Install dependencies
        run: sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y && sudo apt autoremove -y && sudo apt-get install qemu qemu-user-static binfmt-support debootstrap -y
      - name: Build and push version
        if: github.event.inputs.version == 'true'
        id: docker_build_version
        uses: docker/build-push-action@v2
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./docker/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_FRONT }}:${{ steps.extract_version.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push latest
        if: github.event.inputs.version != 'true'
        id: docker_build_latest
        uses: docker/build-push-action@v2
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_FRONT }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
